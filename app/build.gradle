plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
}

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "androidx.navigation.safeargs"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.infoskillstechnology.doctorappclone"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:25.12.0')

    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-storage'
    // Location Service
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.4.0'

    def coroutines = '1.3.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
//    androidx.core:core-ktx:1.0.0
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
//    implementation 'androidx.navigation:navigation-fragment:2.3.1'
//    implementation 'androidx.navigation:navigation-ui:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'
    implementation 'pl.kitek:timertextview:0.0.2'
    implementation 'com.wang.avi:library:2.1.3'
    // networking calling labaray
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    // android custom libaray
    implementation 'com.intuit.sdp:sdp-android:1.0.4'
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    // event bus
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    // room database
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'

    // Hilt dagger
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"

    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha01'
    // When using Kotlin.
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha01'

    implementation 'androidx.hilt:hilt-work:1.0.0-alpha01'
    implementation 'com.github.nguyenhoanglam:ImagePicker:1.4.3'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    implementation 'devs.mulham.horizontalcalendar:horizontalcalendar:1.2.0'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "androidx.room:room-testing:$room_version"

    implementation "com.wajahatkarim3.easyvalidation:easyvalidation-core:1.0.1"
    implementation "com.github.marlonlom:timeago:3.0.2"
    implementation 'com.astuetz:pagerslidingtabstrip:1.0.1'
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    // FirebaseUI for Cloud Firestore
    implementation 'com.firebaseui:firebase-ui-firestore:6.3.0'
    // For developers using AndroidX in their applications
    implementation 'pub.devrel:easypermissions:3.0.0'
    def paging_version = "2.1.2"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    // alternatively - without Android dependencies for testing
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"

    implementation 'com.arakelian:faker:3.8.0'

    implementation 'com.wdullaer:materialdatetimepicker:4.2.3'


//    implementation "com.razorpay:checkout:1.5.15"

    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    // https://mvnrepository.com/artifact/com.razorpay/checkout
    implementation group: 'com.razorpay', name: 'checkout', version: '1.6.4'

}
